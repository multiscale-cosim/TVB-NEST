Bootstrap: docker
from:debian:buster-slim

%help
Copyright 2019 Forschungszentrum Jülich GmbH and Aix-Marseille Université
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 1.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-3.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.

TVB and Nest IO

%files
../../nest-io-dev /home/nest-io-dev
../../nest_elephant_tvb /home/nest_elephant_tvb
../../example/analyse /home/nest_elephant_tvb/analyse
../../example/parameter /home/nest_elephant_tvb/parameter

%post
    apt-get update

    # set environment variable
    export PATH_NEST_INSTALL=/usr/lib/nest/
    export PYTHONPATH=$PATH_NEST_INSTALL/lib/python3.8/site-packages/:$PYTHONPATH:/home/:/usr/local/nrn/lib/python/
    export PATH=$PATH:$PATH_NEST_INSTALL/bin/:/usr/local/nrn/bin/

    # get compiler and access to web interface
    apt-get install -y g++=4:8.3.0-1 gcc=4:8.3.0-1 gfortran=4:8.3.0-1 make=4.2.1-1.2 strace=4.26-0.2 wget=1.20.1-1.1 git=1:2.20.1-2+deb10u3

    # install python
    apt-get install -y build-essential=12.6 cmake=3.13.4-1 zlib1g-dev=1:1.2.11.dfsg-1 libltdl-dev=2.4.6-9 libncurses5-dev=6.1+20181013-2+deb10u2 libgdbm-dev=1.18.1-4 libreadline-dev=7.0-5 \
     libnss3-dev=2:3.42.1-1+deb10u3 libssl-dev=1.1.1d-0+deb10u6 libsqlite3-dev=3.27.2-3+deb10u1 libffi-dev=3.2.1-9 libgsl-dev=2.5+dfsg-6 libbz2-dev=1.0.6-9.2~deb10u1 curl=7.64.0-4+deb10u2
    curl -O https://www.python.org/ftp/python/3.8.10/Python-3.8.10.tar.xz
    tar -xf Python-3.8.10.tar.xz
    cd Python-3.8.10
    ./configure --enable-optimizations --enable-shared
    make
    make altinstall
    cd ..
    rm -rdf  Python-3.8.10.tar.xz Python-3.8.10
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
    ln -s /usr/local/bin/python3.8 /usr/local/bin/python3

    # install pip
    cd /root
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    python3.8 get-pip.py
    rm get-pip.py
    pip install --upgrade pip==21.1.2

    # install MPI
    wget -q http://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz
    tar xf mpich-3.1.4.tar.gz
    cd mpich-3.1.4
    ./configure --disable-fortran --enable-fast=all,O2 --prefix=/usr
    make -j$(nproc)
    make install
    cd ..
    rm -rdf mpich-3.1.4.tar.gz mpich-3.1.4

    # for python library
    pip install --upgrade pip
    pip install nose==1.3.7
    pip install numpy==1.20.3 cython==0.29.23 Pillow==8.2.0
    pip install mpi4py==3.0.3
    apt-get install -y liblapack-dev=3.8.0-2
    pip install scipy==1.6.3
    pip install elephant==0.10.0
    # for plotting function
    pip install matplotlib==3.4.2
    pip install networkx==2.5.1
    pip install jupyter==1.0.0
    pip install vtk==9.0.1
    pip install h5py==3.2.1
    pip install cycler==0.10.0
    pip install jupyter==1.0.0
    pip install vtk==9.0.1

    # install TVB
    apt-get install -y llvm-dev=1:7.0-47 llvm=1:7.0-47
    export LLVM_CONFIG=/usr/bin/llvm-config
    pip install tvb-data==2.0 tvb-gdist==2.1.0 tvb-library==2.0.10

    # install parameters
    git clone https://github.com/NeuralEnsemble/parameters
    cd parameters
    git checkout b95bac2bd17f03ce600541e435e270a1e1c5a478
    python3.8 setup.py install
    cd ..
    rm -rd parameters

    # install neuron
    apt-get install -y bison=2:3.3.2.dfsg-1 flex=2.6.4-6.2 libxcomposite-dev=1:0.4.4-2
    git clone https://github.com/neuronsimulator/nrn.git
    cd nrn
    git checkout 8.0.0
    mkdir build
    cd build
    cmake .. \
    -DNRN_ENABLE_INTERVIEWS=OFF \
    -DNRN_ENABLE_MPI=OFF \
    -DNRN_ENABLE_RX2D=OFF \
    -DCMAKE_INSTALL_PREFIX=/usr/local/nrn
    cmake --build . --parallel 7 --target install
    cd ../..
    rm -rdf nrn
    # initialisation of synapse
    cd /home/nest_elephant_tvb/analyse/LFPY
    nrnivmodl
    cd

    # install LPFy
    pip install lfpykit==0.3
    pip install MEAutility==1.4.9
    pip install LFPy==2.2.1

    # install HybridLFPy from github
    git clone --branch nest-3-lio https://github.com/lionelkusch/hybridLFPy.git
    cd hybridLFPy
    python3.8 setup.py install
    cd ..
    rm -rd hybridLFPy

    # Set up environment for Nest installation
    NAME_SOURCE_NEST=/home/nest-io-dev
    PATH_NEST_BUILD=/home/nest-simulator-build
    export PATH_NEST_BUILD
    export NAME_SOURCE_NEST

    # Compile and Install Nest
    cd /home/
    mkdir $PATH_NEST_BUILD
    cd $PATH_NEST_BUILD
    cmake -DCMAKE_INSTALL_PREFIX:PATH=$PATH_NEST_INSTALL $NAME_SOURCE_NEST -Dwith-mpi=ON -Dwith-openmp=ON -Dwith-readline=On -Dwith-ltdl=ON -Dwith-python=ON -Dcythonize-pynest=ON
    make
    make install
    #make test
    cd /home/
    rm -dr $PATH_NEST_BUILD

    echo "export  PYTHONPATH=$PYTHONPATH\n export PATH=$PATH" >>$SINGULARITY_ENVIRONMENT

%apprun python
   exec /usr/local/bin/python3.8 "$@"

%apprun mpi
   exec /usr/local/bin/mpirun "$@"

%apprun jupyter-notebook
   exec jupyter-notebook

%apprun nest
   exec /usr/local/bin/python3.8 /home/nest_elephant_tvb/Nest/simulation_Zerlaut.py "$@"

%apprun TVB
   exec /usr/local/bin/python3.8 /home/nest_elephant_tvb/Tvb/simulation_Zerlaut.py "$@"

%apprun NEST-TVB
   exec /usr/local/bin/python3.8 /home/nest_elephant_tvb/translation/nest_to_tvb.py "$@"

%apprun TVB-NEST
   exec /usr/local/bin/python3.8 /home/nest_elephant_tvb/translation/tvb_to_nest.py "$@"

%apprun create_launcher
   exec cat /home/nest_elephant_tvb/orchestrator/run_exploration.py

%apprun LFP
   exec /usr/local/bin/python3.8 /home/nest_elephant_tvb/analyse/LFPY/run_LFP.py "$@"