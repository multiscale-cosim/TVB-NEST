<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>16</zoom_level>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>32</x>
      <y>432</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>NEST</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>208</x>
      <y>352</y>
      <w>208</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>spike trains
analysis</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>592</x>
      <y>368</y>
      <w>304</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>sliding window average</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>912</x>
      <y>432</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>TVB</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>208</x>
      <y>512</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>selection spikes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>592</x>
      <y>496</y>
      <w>304</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Inhomogeneous Poisson
generator
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>368</y>
      <w>128</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>464</y>
      <w>128</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>496</y>
      <w>224</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
spike train
of reference</panel_attributes>
    <additional_attributes>10.0;20.0;120.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>464</y>
      <w>176</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;90.0;40.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>352</y>
      <w>224</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
histogram</panel_attributes>
    <additional_attributes>120.0;21.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>928</x>
      <y>352</y>
      <w>209</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>mean firing rate</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is an element with activated wordwrap
//If a line would exceed the elements border, instead
//the exceeding part is written into the next line

int y=textHeight();

setWordWrap(true);

for(String textline : textlines) {
	y += printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>368</y>
      <w>176</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;40.0;90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>928</x>
      <y>528</y>
      <w>209</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>mean firing rate</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is an element with activated wordwrap
//If a line would exceed the elements border, instead
//the exceeding part is written into the next line

int y=textHeight();

setWordWrap(true);

for(String textline : textlines) {
	y += printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>0</x>
      <y>528</y>
      <w>209</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>spike trains</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is an element with activated wordwrap
//If a line would exceed the elements border, instead
//the exceeding part is written into the next line

int y=textHeight();

setWordWrap(true);

for(String textline : textlines) {
	y += printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>0</x>
      <y>352</y>
      <w>209</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>spike trains</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is an element with activated wordwrap
//If a line would exceed the elements border, instead
//the exceeding part is written into the next line

int y=textHeight();

setWordWrap(true);

for(String textline : textlines) {
	y += printCenter(textline,y);
}</custom_code>
  </element>
</diagram>
